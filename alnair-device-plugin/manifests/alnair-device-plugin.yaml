apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: alnair-device-plugin-daemonset
  namespace: kube-system
spec:
  selector:
    matchLabels:
      device-plugin: alnair
  template:
    metadata:
      labels:
        device-plugin: alnair
    spec:
      serviceAccountName: alnair-device-plugin
      initContainers:
        - name: copy-intercept-lib
          image: centaurusinfra/alnair-device-plugin:0.3.1
          command: ["sh", "-c", "cp /opt/alnair/libcuinterpose.so /tmp/lib/"]
          volumeMounts:
          - name: tmp-config
            mountPath: /tmp/lib/
      containers:
        - name: alnair-device-plugin
          image: centaurusinfra/alnair-device-plugin:0.3.1
          command: ["alnair-device-plugin"]
          #command: ["/bin/sh", "-c", "sleep infinity"]
          imagePullPolicy: Always
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
          - name: device-plugin
            mountPath: /var/lib/kubelet/device-plugins
          - name: workspace
            mountPath: /var/lib/alnair/workspace
        - name: alnair-vgpu-server
          image: centaurusinfra/alnair-device-plugin:0.3.1
          command: ["alnair-vgpu-server"]
          imagePullPolicy: Always
          #securityContext:
          #  privileged: true
          volumeMounts:
          - name: sockets
            mountPath: /run/alnair/
          - name: cgroup
            mountPath: /sys/fs/cgroup/ 
          - name: workspace
            mountPath: /var/lib/alnair/workspace
      volumes:
      - name: device-plugin
        hostPath:
          path: /var/lib/kubelet/device-plugins
      - name: sockets
        hostPath:
          path: /run/alnair/
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup/
      - name: workspace
        hostPath:
          path: /var/lib/alnair/workspace
      - name: tmp-config
        hostPath:
          path: /opt/alnair/
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: alnair-device-plugin
  namespace: kube-system
---
#ClusterRole and ClusterRoleBinding don't have namespaces, the access is granted to all namespaces, Choose Role and RoleBinding for specific namespaces
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: patch-node-pod-role
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch", "update", "patch"]
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "list", "watch", "update", "patch"]
---
#command to verify $kubectl auth can-i patch pods --as system:serviceaccount:kube-system:alnair-device-plugin
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding    
metadata:
  name: alnair-device-plugin-patch-node-pod
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: patch-node-pod-role
subjects:
- kind: ServiceAccount
  name: alnair-device-plugin
  namespace: kube-system
