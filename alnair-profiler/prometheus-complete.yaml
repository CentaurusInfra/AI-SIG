# create namesapce
apiVersion: v1
kind: Namespace
metadata:
  name: alnair
---
# define cluster Role
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
rules:
- apiGroups: [""]
  resources:
  - nodes
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]
---
# define service account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: alnair
---
# apply cluster role binding
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
- kind: ServiceAccount
  name: prometheus
  namespace: alnair
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: alnair
data:
  prometheus.yml: |
    scrape_configs:
      - job_name: cadvisor
        scrape_interval: 5s
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - alnair
            selectors:
              - role: pod
                label: "name=cadvisor"
        relabel_configs:
        - source_labels: [__address__]
          regex: ^(.*):\d+$
          target_label: __address__
          replacement: $1:8080
        - source_labels: [__meta_kubernetes_pod_node_name]
          target_label: instance
        - source_labels: [__meta_kubernetes_host_ip]
          target_label: node_ip
      - job_name: 'profiler-pods'
        scrape_interval: 1s 
        metrics_path: '/metrics' 
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - alnair
            selectors:
              - role: pod
                label: "app=profiler" 
        relabel_configs:
        - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
          action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          target_label: __address__
      - job_name: 'alnair-exporter'
        scrape_interval: 1s
        metrics_path: '/metrics'
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - alnair
            selectors:
              - role: pod
                label: "app=alnair-exporter"
        relabel_configs:
        - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
          action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          target_label: __address__
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: alnair
  labels:
    app: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      serviceAccountName: prometheus
      containers:
        - name: prometheus
          image: prom/prometheus
          args:
            - "--storage.tsdb.retention.time=120h"
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.path=/prometheus/"
            - "--web.enable-lifecycle"  # for runtime config update reload $curl -X POST http://localhost:9090/-/reload
          ports:
            - containerPort: 9090
              hostPort: 9090
          resources:
            requests:
              cpu: 500m
              memory: 500M
            limits:
              cpu: 1
              memory: 1Gi
          volumeMounts:
            - name: prometheus-config-volume
              mountPath: /etc/prometheus/
            - name: prometheus-storage-volume
              mountPath: /prometheus/
      volumes:
        - name: prometheus-config-volume
          configMap:
            defaultMode: 420
            name: prometheus-config
  
        - name: prometheus-storage-volume
          emptyDir: {}
---
# deploy services
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: alnair
spec:
  selector:
    app: prometheus
  type: NodePort
  ports:
  - protocol: TCP
    port: 9090
    targetPort: 9090
    nodePort: 30909
---
#pushgateway deployment

---
# pushgateway service


