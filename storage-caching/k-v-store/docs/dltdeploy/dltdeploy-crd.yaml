apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: dltdeploys.alnair.com
spec:
  group: alnair.com
  names:
    kind: DLTDeploy
    singular: dltdeploy
    plural: dltdeploys
    shortNames:
    - dlt
    - dlts
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              properties:
                secret:
                  description: SecretRef is reference to Kubernetes secret.
                  properties:
                    name:
                      type: string
                  required:
                  - name
                  type: object
                jobs:
                  items:
                    properties:
                      args:
                        description: 'Arguments to the entrypoint. The docker image''s
                          CMD is used if this is not provided. Variable references
                          $(VAR_NAME) are expanded using the container''s environment.
                          If a variable cannot be resolved, the reference in the
                          input string will be unchanged. The $(VAR_NAME) syntax
                          can be escaped with a double $$, ie: $$(VAR_NAME). Escaped
                          references will never be expanded, regardless of whether
                          the variable exists or not. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                        items:
                          type: string
                        type: array
                      command:
                        description: 'Entrypoint array. Not executed within a shell.
                          The docker image''s ENTRYPOINT is used if this is not
                          provided. Variable references $(VAR_NAME) are expanded
                          using the container''s environment. If a variable cannot
                          be resolved, the reference in the input string will be
                          unchanged. The $(VAR_NAME) syntax can be escaped with
                          a double $$, ie: $$(VAR_NAME). Escaped references will
                          never be expanded, regardless of whether the variable
                          exists or not. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                        items:
                          type: string
                        type: array
                      env:
                        description: List of environment variables to set in the
                          container.
                        items:
                          description: EnvVar represents an environment variable
                            present in a Container.
                          properties:
                            name:
                              description: Name of the environment variable. Must
                                be a C_IDENTIFIER.
                              type: string
                            value:
                              description: 'Variable references $(VAR_NAME) are
                                expanded using the previous defined environment
                                variables in the container and any service environment
                                variables. If a variable cannot be resolved, the
                                reference in the input string will be unchanged.
                                The $(VAR_NAME) syntax can be escaped with a double
                                $$, ie: $$(VAR_NAME). Escaped references will never
                                be expanded, regardless of whether the variable
                                exists or not. Defaults to "".'
                              type: string
                            valueFrom:
                              description: Source for the environment variable's
                                value. Cannot be used if value is not empty.
                              properties:
                                configMapKeyRef:
                                  description: Selects a key of a ConfigMap.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap
                                        or its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                fieldRef:
                                  description: 'Selects a field of the pod: supports
                                    metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                    `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                    spec.serviceAccountName, status.hostIP, status.podIP,
                                    status.podIPs.'
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath
                                        is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in
                                        the specified API version.
                                      type: string
                                  required:
                                  - fieldPath
                                  type: object
                                resourceFieldRef:
                                  description: 'Selects a resource of the container:
                                    only resources limits and requests (limits.cpu,
                                    limits.memory, limits.ephemeral-storage, requests.cpu,
                                    requests.memory and requests.ephemeral-storage)
                                    are currently supported.'
                                  properties:
                                    containerName:
                                      description: 'Container name: required for
                                        volumes, optional for env vars'
                                      type: string
                                    divisor:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Specifies the output format of
                                        the exposed resources, defaults to "1"
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    resource:
                                      description: 'Required: resource to select'
                                      type: string
                                  required:
                                  - resource
                                  type: object
                                secretKeyRef:
                                  description: Selects a key of a secret in the
                                    pod's namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or
                                        its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                      envFrom:
                        description: List of sources to populate environment variables
                          in the container. The keys defined within a source must
                          be a C_IDENTIFIER. All invalid keys will be reported as
                          an event when the container is starting. When a key exists
                          in multiple sources, the value associated with the last
                          source will take precedence. Values defined by an Env
                          with a duplicate key will take precedence.
                        items:
                          description: EnvFromSource represents the source of a
                            set of ConfigMaps
                          properties:
                            configMapRef:
                              description: The ConfigMap to select from
                              properties:
                                name:
                                  description: 'Name of the referent. More info:
                                    https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap must
                                    be defined
                                  type: boolean
                              type: object
                            prefix:
                              description: An optional identifier to prepend to
                                each key in the ConfigMap. Must be a C_IDENTIFIER.
                              type: string
                            secretRef:
                              description: The Secret to select from
                              properties:
                                name:
                                  description: 'Name of the referent. More info:
                                    https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret must be
                                    defined
                                  type: boolean
                              type: object
                          type: object
                        type: array
                      image:
                        description: 'Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images'
                        type: string
                      imagePullPolicy:
                        description: Image pull policy. One of Always, Never, IfNotPresent.
                          Defaults to Always.
                        type: string
                        default: Always
                      lifecycle:
                        description: Actions that the management system should take
                          in response to container lifecycle events.
                        properties:
                          postStart:
                            description: 'PostStart is called immediately after
                              a container is created. If the handler fails, the
                              container is terminated and restarted according to
                              its restart policy. Other management of the container
                              blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                            properties:
                              exec:
                                description: One and only one of the following should
                                  be specified. Exec specifies the action to take.
                                properties:
                                  command:
                                    description: Command is the command line to
                                      execute inside the container, the working
                                      directory for the command  is root ('/') in
                                      the container's filesystem. The command is
                                      simply exec'd, it is not run inside a shell,
                                      so traditional shell instructions ('|', etc)
                                      won't work. To use a shell, you need to explicitly
                                      call out to that shell. Exit status of 0 is
                                      treated as live/healthy and non-zero is unhealthy.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              httpGet:
                                description: HTTPGet specifies the http request
                                  to perform.
                                properties:
                                  host:
                                    description: Host name to connect to, defaults
                                      to the pod IP. You probably want to set "Host"
                                      in httpHeaders instead.
                                    type: string
                                  httpHeaders:
                                    description: Custom headers to set in the request.
                                      HTTP allows repeated headers.
                                    items:
                                      description: HTTPHeader describes a custom
                                        header to be used in HTTP probes
                                      properties:
                                        name:
                                          description: The header field name
                                          type: string
                                        value:
                                          description: The header field value
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    type: array
                                  path:
                                    description: Path to access on the HTTP server.
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Name or number of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: Scheme to use for connecting to
                                      the host. Defaults to HTTP.
                                    type: string
                                required:
                                - port
                                type: object
                              tcpSocket:
                                description: 'TCPSocket specifies an action involving
                                  a TCP port. TCP hooks not yet supported TODO:
                                  implement a realistic TCP lifecycle hook'
                                properties:
                                  host:
                                    description: 'Optional: Host name to connect
                                      to, defaults to the pod IP.'
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Number or name of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                required:
                                - port
                                type: object
                            type: object
                          preStop:
                            description: 'PreStop is called immediately before a
                              container is terminated due to an API request or management
                              event such as liveness/startup probe failure, preemption,
                              resource contention, etc. The handler is not called
                              if the container crashes or exits. The reason for
                              termination is passed to the handler. The Pod''s termination
                              grace period countdown begins before the PreStop hooked
                              is executed. Regardless of the outcome of the handler,
                              the container will eventually terminate within the
                              Pod''s termination grace period. Other management
                              of the container blocks until the hook completes or
                              until the termination grace period is reached. More
                              info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                            properties:
                              exec:
                                description: One and only one of the following should
                                  be specified. Exec specifies the action to take.
                                properties:
                                  command:
                                    description: Command is the command line to
                                      execute inside the container, the working
                                      directory for the command  is root ('/') in
                                      the container's filesystem. The command is
                                      simply exec'd, it is not run inside a shell,
                                      so traditional shell instructions ('|', etc)
                                      won't work. To use a shell, you need to explicitly
                                      call out to that shell. Exit status of 0 is
                                      treated as live/healthy and non-zero is unhealthy.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              httpGet:
                                description: HTTPGet specifies the http request
                                  to perform.
                                properties:
                                  host:
                                    description: Host name to connect to, defaults
                                      to the pod IP. You probably want to set "Host"
                                      in httpHeaders instead.
                                    type: string
                                  httpHeaders:
                                    description: Custom headers to set in the request.
                                      HTTP allows repeated headers.
                                    items:
                                      description: HTTPHeader describes a custom
                                        header to be used in HTTP probes
                                      properties:
                                        name:
                                          description: The header field name
                                          type: string
                                        value:
                                          description: The header field value
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    type: array
                                  path:
                                    description: Path to access on the HTTP server.
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Name or number of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: Scheme to use for connecting to
                                      the host. Defaults to HTTP.
                                    type: string
                                required:
                                - port
                                type: object
                              tcpSocket:
                                description: 'TCPSocket specifies an action involving
                                  a TCP port. TCP hooks not yet supported TODO:
                                  implement a realistic TCP lifecycle hook'
                                properties:
                                  host:
                                    description: 'Optional: Host name to connect
                                      to, defaults to the pod IP.'
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Number or name of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                required:
                                - port
                                type: object
                            type: object
                        type: object
                      name:
                        description: Name of the container specified as a DNS_LABEL.
                          Each container in a pod must have a unique name (DNS_LABEL).
                        type: string
                      ports:
                        description: List of ports to expose from the container.
                          Exposing a port here gives the system additional information
                          about the network connections a container uses, but is
                          primarily informational. Not specifying a port here DOES
                          NOT prevent that port from being exposed. Any port which
                          is listening on the default "0.0.0.0" address inside a
                          container will be accessible from the network.
                        items:
                          description: ContainerPort represents a network port in
                            a single container.
                          properties:
                            containerPort:
                              description: Number of port to expose on the pod's
                                IP address. This must be a valid port number, 0
                                < x < 65536.
                              format: int32
                              type: integer
                            hostIP:
                              description: What host IP to bind the external port
                                to.
                              type: string
                            hostPort:
                              description: Number of port to expose on the host.
                                If specified, this must be a valid port number,
                                0 < x < 65536. If HostNetwork is specified, this
                                must match ContainerPort. Most containers do not
                                need this.
                              format: int32
                              type: integer
                            name:
                              description: If specified, this must be an IANA_SVC_NAME
                                and unique within the pod. Each named port in a
                                pod must have a unique name. Name for the port that
                                can be referred to by services.
                              type: string
                            protocol:
                              default: TCP
                              description: Protocol for port. Must be UDP, TCP,
                                or SCTP. Defaults to "TCP".
                              type: string
                          required:
                          - containerPort
                          type: object
                        type: array
                      resources:
                        description: 'Compute Resources required by this container.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        properties:
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of
                              compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount
                              of compute resources required. If Requests is omitted
                              for a container, it defaults to Limits if that is
                              explicitly specified, otherwise to an implementation-defined
                              value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                            type: object
                        type: object
                      volumeMounts:
                        description: Pod volumes to mount into the container's filesystem.
                        items:
                          description: VolumeMount describes a mounting of a Volume
                            within a container.
                          properties:
                            mountPath:
                              description: Path within the container at which the
                                volume should be mounted.  Must not contain ':'.
                              type: string
                            mountPropagation:
                              description: mountPropagation determines how mounts
                                are propagated from the host to container and the
                                other way around. When not set, MountPropagationNone
                                is used. This field is beta in 1.10.
                              type: string
                            name:
                              description: This must match the Name of a Volume.
                              type: string
                            readOnly:
                              description: Mounted read-only if true, read-write
                                otherwise (false or unspecified). Defaults to false.
                              type: boolean
                            subPath:
                              description: Path within the volume from which the
                                container's volume should be mounted. Defaults to
                                "" (volume's root).
                              type: string
                            subPathExpr:
                              description: Expanded path within the volume from
                                which the container's volume should be mounted.
                                Behaves similarly to SubPath but environment variable
                                references $(VAR_NAME) are expanded using the container's
                                environment. Defaults to "" (volume's root). SubPathExpr
                                and SubPath are mutually exclusive.
                              type: string
                          required:
                          - mountPath
                          - name
                          type: object
                        type: array
                      workingDir:
                        description: Container's working directory. If not specified,
                          the container runtime's default will be used, which might
                          be configured in the container image.
                        type: string              
                      datasource:
                        type: object
                        properties:
                          name: 
                            type: string
                          secret:
                            description: S3 authorization information SecretRef is reference to Kubernetes secret.
                            properties:
                              name:
                                type: string
                            required:
                            - name
                            type: object
                          bucket:
                            type: string
                          keys:
                            type: array
                            items:
                              type: string
                        required:
                        - bucket
                      configurations:
                        items:
                          description: ConfigMapRef is reference to Kubernetes ConfigMap.
                          properties:
                            name:
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                    required:
                    - image
                    - name
                    - datasource
                    - command
                    type: object
                  type: array
                volumes:
                  type: object
                  description: 'List of volumes that can be mounted by containers belonging to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes'
                  items:
                    description: Volume represents a named volume in a pod that may be accessed by any container in the pod.
                    properties:
                      emptyDir:
                        type: object
                        description: 'EmptyDir represents a temporary directory
                          that shares a pod''s lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                        properties:
                          medium:
                            description: 'What type of storage medium should back
                              this directory. The default is "" which means to use
                              the node''s default medium. Must be an empty string
                              (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                            type: string
                          sizeLimit:
                            anyOf:
                            - type: integer
                            - type: string
                            description: 'Total amount of local storage required
                              for this EmptyDir volume. The size limit is also applicable
                              for memory medium. The maximum usage on memory medium
                              EmptyDir would be the minimum value between the SizeLimit
                              specified here and the sum of memory limits of all
                              containers in a pod. The default is nil which means
                              that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir'
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                      configMap:
                        description: ConfigMap represents a configMap that should populate this volume
                        properties:
                          defaultMode:
                            description: 'Optional: mode bits used to set permissions
                              on created files by default. Must be an octal value
                              between 0000 and 0777 or a decimal value between 0
                              and 511. YAML accepts both octal and decimal values,
                              JSON requires decimal values for mode bits. Defaults
                              to 0644. Directories within the path are not affected
                              by this setting. This might be in conflict with other
                              options that affect the file mode, like fsGroup, and
                              the result can be other mode bits set.'
                            format: int32
                            type: integer
                          items:
                            description: If unspecified, each key-value pair in
                              the Data field of the referenced ConfigMap will be
                              projected into the volume as a file whose name is
                              the key and content is the value. If specified, the
                              listed keys will be projected into the specified paths,
                              and unlisted keys will not be present. If a key is
                              specified which is not present in the ConfigMap, the
                              volume setup will error unless it is marked optional.
                              Paths must be relative and may not contain the '..'
                              path or start with '..'.
                            items:
                              description: Maps a string key to a path within a
                                volume.
                              properties:
                                key:
                                  description: The key to project.
                                  type: string
                                mode:
                                  description: 'Optional: mode bits used to set
                                    permissions on this file. Must be an octal value
                                    between 0000 and 0777 or a decimal value between
                                    0 and 511. YAML accepts both octal and decimal
                                    values, JSON requires decimal values for mode
                                    bits. If not specified, the volume defaultMode
                                    will be used. This might be in conflict with
                                    other options that affect the file mode, like
                                    fsGroup, and the result can be other mode bits
                                    set.'
                                  format: int32
                                  type: integer
                                path:
                                  description: The relative path of the file to
                                    map the key to. May not be an absolute path.
                                    May not contain the path element '..'. May not
                                    start with the string '..'.
                                  type: string
                              required:
                              - key
                              - path
                              type: object
                            type: array
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the ConfigMap or its keys
                              must be defined
                            type: boolean
                        type: object
                      hostPath:
                        description: 'HostPath represents a pre-existing file or
                          directory on the host machine that is directly exposed
                          to the container. This is generally used for system agents
                          or other privileged things that are allowed to see the
                          host machine. Most containers will NOT need this. More
                          info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                          --- TODO(jonesdl) We need to restrict who can use host
                          directory mounts and who can/can not mount host directories
                          as read/write.'
                        properties:
                          path:
                            description: 'Path of the directory on the host. If
                              the path is a symlink, it will follow the link to
                              the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                            type: string
                          type:
                            description: 'Type for HostPath Volume Defaults to ""
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                            type: string
                        required:
                        - path
                        type: object
                      persistentVolumeClaim:
                        description: 'PersistentVolumeClaimVolumeSource represents
                          a reference to a PersistentVolumeClaim in the same namespace.
                          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                        properties:
                          claimName:
                            description: 'ClaimName is the name of a PersistentVolumeClaim
                              in the same namespace as the pod using this volume.
                              More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                            type: string
                          readOnly:
                            description: Will force the ReadOnly setting in VolumeMounts.
                              Default false.
                            type: boolean
                        required:
                        - claimName
                        type: object     
                    type: object
                labels:
                  additionalProperties:
                    type: string
                  description: 'Map of string keys and values that can be used to
                    organize and categorize (scope and select) objects. May match
                    selectors of replication controllers and services. More info:
                    http://kubernetes.io/docs/user-guide/labels'
                  type: object
                nodeSelector:
                  additionalProperties:
                    type: string
                  description: 'NodeSelector is a selector which must be true for
                    the pod to fit on a node. Selector which must match a node''s
                    labels for the pod to be scheduled on that node. More info:
                    https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                  type: object         
              required:
              - secret
              - jobs
          required:
          - spec