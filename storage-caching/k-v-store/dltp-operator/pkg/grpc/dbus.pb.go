// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.6.1
// source: dbus.proto

package __

import (
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConnectionRC int32

const (
	ConnectionRC_SUCCESSFUL ConnectionRC = 0
	ConnectionRC_FAILED     ConnectionRC = 1
	ConnectionRC_TIMEOUT    ConnectionRC = 2
)

// Enum value maps for ConnectionRC.
var (
	ConnectionRC_name = map[int32]string{
		0: "SUCCESSFUL",
		1: "FAILED",
		2: "TIMEOUT",
	}
	ConnectionRC_value = map[string]int32{
		"SUCCESSFUL": 0,
		"FAILED":     1,
		"TIMEOUT":    2,
	}
)

func (x ConnectionRC) Enum() *ConnectionRC {
	p := new(ConnectionRC)
	*p = x
	return p
}

func (x ConnectionRC) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConnectionRC) Descriptor() protoreflect.EnumDescriptor {
	return file_dbus_proto_enumTypes[0].Descriptor()
}

func (ConnectionRC) Type() protoreflect.EnumType {
	return &file_dbus_proto_enumTypes[0]
}

func (x ConnectionRC) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConnectionRC.Descriptor instead.
func (ConnectionRC) EnumDescriptor() ([]byte, []int) {
	return file_dbus_proto_rawDescGZIP(), []int{0}
}

type LogLevel int32

const (
	LogLevel_INFO  LogLevel = 0
	LogLevel_DEBUG LogLevel = 1
	LogLevel_ERROR LogLevel = 2
)

// Enum value maps for LogLevel.
var (
	LogLevel_name = map[int32]string{
		0: "INFO",
		1: "DEBUG",
		2: "ERROR",
	}
	LogLevel_value = map[string]int32{
		"INFO":  0,
		"DEBUG": 1,
		"ERROR": 2,
	}
)

func (x LogLevel) Enum() *LogLevel {
	p := new(LogLevel)
	*p = x
	return p
}

func (x LogLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_dbus_proto_enumTypes[1].Descriptor()
}

func (LogLevel) Type() protoreflect.EnumType {
	return &file_dbus_proto_enumTypes[1]
}

func (x LogLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogLevel.Descriptor instead.
func (LogLevel) EnumDescriptor() ([]byte, []int) {
	return file_dbus_proto_rawDescGZIP(), []int{1}
}

type Credential struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *Credential) Reset() {
	*x = Credential{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbus_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Credential) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Credential) ProtoMessage() {}

func (x *Credential) ProtoReflect() protoreflect.Message {
	mi := &file_dbus_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Credential.ProtoReflect.Descriptor instead.
func (*Credential) Descriptor() ([]byte, []int) {
	return file_dbus_proto_rawDescGZIP(), []int{0}
}

func (x *Credential) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Credential) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type ConnectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cred       *Credential `protobuf:"bytes,1,opt,name=cred,proto3" json:"cred,omitempty"`
	Timeout    int32       `protobuf:"varint,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
	CreateUser bool        `protobuf:"varint,3,opt,name=createUser,proto3" json:"createUser,omitempty"`
}

func (x *ConnectRequest) Reset() {
	*x = ConnectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbus_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectRequest) ProtoMessage() {}

func (x *ConnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dbus_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectRequest.ProtoReflect.Descriptor instead.
func (*ConnectRequest) Descriptor() ([]byte, []int) {
	return file_dbus_proto_rawDescGZIP(), []int{1}
}

func (x *ConnectRequest) GetCred() *Credential {
	if x != nil {
		return x.Cred
	}
	return nil
}

func (x *ConnectRequest) GetTimeout() int32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *ConnectRequest) GetCreateUser() bool {
	if x != nil {
		return x.CreateUser
	}
	return false
}

type ConnectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rc   ConnectionRC `protobuf:"varint,1,opt,name=rc,proto3,enum=dbus.ConnectionRC" json:"rc,omitempty"`
	Resp string       `protobuf:"bytes,2,opt,name=resp,proto3" json:"resp,omitempty"`
}

func (x *ConnectResponse) Reset() {
	*x = ConnectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbus_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectResponse) ProtoMessage() {}

func (x *ConnectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dbus_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectResponse.ProtoReflect.Descriptor instead.
func (*ConnectResponse) Descriptor() ([]byte, []int) {
	return file_dbus_proto_rawDescGZIP(), []int{2}
}

func (x *ConnectResponse) GetRc() ConnectionRC {
	if x != nil {
		return x.Rc
	}
	return ConnectionRC_SUCCESSFUL
}

func (x *ConnectResponse) GetResp() string {
	if x != nil {
		return x.Resp
	}
	return ""
}

type ResourceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CPUMemoryFree int32 `protobuf:"varint,1,opt,name=CPUMemoryFree,proto3" json:"CPUMemoryFree,omitempty"`
	GPUMemoryFree int32 `protobuf:"varint,2,opt,name=GPUMemoryFree,proto3" json:"GPUMemoryFree,omitempty"`
}

func (x *ResourceInfo) Reset() {
	*x = ResourceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbus_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceInfo) ProtoMessage() {}

func (x *ResourceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_dbus_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceInfo.ProtoReflect.Descriptor instead.
func (*ResourceInfo) Descriptor() ([]byte, []int) {
	return file_dbus_proto_rawDescGZIP(), []int{3}
}

func (x *ResourceInfo) GetCPUMemoryFree() int32 {
	if x != nil {
		return x.CPUMemoryFree
	}
	return 0
}

func (x *ResourceInfo) GetGPUMemoryFree() int32 {
	if x != nil {
		return x.GPUMemoryFree
	}
	return 0
}

type S3Auth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AwsAccessKeyId     string   `protobuf:"bytes,1,opt,name=aws_access_key_id,json=awsAccessKeyId,proto3" json:"aws_access_key_id,omitempty"`
	AwsSecretAccessKey string   `protobuf:"bytes,2,opt,name=aws_secret_access_key,json=awsSecretAccessKey,proto3" json:"aws_secret_access_key,omitempty"`
	RegionName         string   `protobuf:"bytes,3,opt,name=region_name,json=regionName,proto3" json:"region_name,omitempty"`
	Bucket             string   `protobuf:"bytes,4,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Keys               []string `protobuf:"bytes,5,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *S3Auth) Reset() {
	*x = S3Auth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbus_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S3Auth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S3Auth) ProtoMessage() {}

func (x *S3Auth) ProtoReflect() protoreflect.Message {
	mi := &file_dbus_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S3Auth.ProtoReflect.Descriptor instead.
func (*S3Auth) Descriptor() ([]byte, []int) {
	return file_dbus_proto_rawDescGZIP(), []int{4}
}

func (x *S3Auth) GetAwsAccessKeyId() string {
	if x != nil {
		return x.AwsAccessKeyId
	}
	return ""
}

func (x *S3Auth) GetAwsSecretAccessKey() string {
	if x != nil {
		return x.AwsSecretAccessKey
	}
	return ""
}

func (x *S3Auth) GetRegionName() string {
	if x != nil {
		return x.RegionName
	}
	return ""
}

func (x *S3Auth) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *S3Auth) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

type RegisterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cred             *Credential   `protobuf:"bytes,1,opt,name=cred,proto3" json:"cred,omitempty"`
	Dataset          string        `protobuf:"bytes,2,opt,name=dataset,proto3" json:"dataset,omitempty"`
	S3Auth           *S3Auth       `protobuf:"bytes,3,opt,name=s3auth,proto3" json:"s3auth,omitempty"`
	UseCache         bool          `protobuf:"varint,4,opt,name=useCache,proto3" json:"useCache,omitempty"`
	FlushFreq        int32         `protobuf:"varint,5,opt,name=flushFreq,proto3" json:"flushFreq,omitempty"`
	DurabilityInMem  int32         `protobuf:"varint,6,opt,name=durabilityInMem,proto3" json:"durabilityInMem,omitempty"`
	DurabilityInDisk int32         `protobuf:"varint,7,opt,name=durabilityInDisk,proto3" json:"durabilityInDisk,omitempty"`
	Resource         *ResourceInfo `protobuf:"bytes,8,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *RegisterRequest) Reset() {
	*x = RegisterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbus_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRequest) ProtoMessage() {}

func (x *RegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dbus_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRequest.ProtoReflect.Descriptor instead.
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return file_dbus_proto_rawDescGZIP(), []int{5}
}

func (x *RegisterRequest) GetCred() *Credential {
	if x != nil {
		return x.Cred
	}
	return nil
}

func (x *RegisterRequest) GetDataset() string {
	if x != nil {
		return x.Dataset
	}
	return ""
}

func (x *RegisterRequest) GetS3Auth() *S3Auth {
	if x != nil {
		return x.S3Auth
	}
	return nil
}

func (x *RegisterRequest) GetUseCache() bool {
	if x != nil {
		return x.UseCache
	}
	return false
}

func (x *RegisterRequest) GetFlushFreq() int32 {
	if x != nil {
		return x.FlushFreq
	}
	return 0
}

func (x *RegisterRequest) GetDurabilityInMem() int32 {
	if x != nil {
		return x.DurabilityInMem
	}
	return 0
}

func (x *RegisterRequest) GetDurabilityInDisk() int32 {
	if x != nil {
		return x.DurabilityInDisk
	}
	return 0
}

func (x *RegisterRequest) GetResource() *ResourceInfo {
	if x != nil {
		return x.Resource
	}
	return nil
}

type RegisterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*RegisterResponse_Regsucc
	//	*RegisterResponse_Regerr
	Response isRegisterResponse_Response `protobuf_oneof:"response"`
}

func (x *RegisterResponse) Reset() {
	*x = RegisterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbus_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterResponse) ProtoMessage() {}

func (x *RegisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dbus_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterResponse.ProtoReflect.Descriptor instead.
func (*RegisterResponse) Descriptor() ([]byte, []int) {
	return file_dbus_proto_rawDescGZIP(), []int{6}
}

func (m *RegisterResponse) GetResponse() isRegisterResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *RegisterResponse) GetRegsucc() *RegisterSuccess {
	if x, ok := x.GetResponse().(*RegisterResponse_Regsucc); ok {
		return x.Regsucc
	}
	return nil
}

func (x *RegisterResponse) GetRegerr() *RegisterError {
	if x, ok := x.GetResponse().(*RegisterResponse_Regerr); ok {
		return x.Regerr
	}
	return nil
}

type isRegisterResponse_Response interface {
	isRegisterResponse_Response()
}

type RegisterResponse_Regsucc struct {
	Regsucc *RegisterSuccess `protobuf:"bytes,1,opt,name=regsucc,proto3,oneof"`
}

type RegisterResponse_Regerr struct {
	Regerr *RegisterError `protobuf:"bytes,2,opt,name=regerr,proto3,oneof"`
}

func (*RegisterResponse_Regsucc) isRegisterResponse_Response() {}

func (*RegisterResponse_Regerr) isRegisterResponse_Response() {}

type Policy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChunkSize int32    `protobuf:"varint,4,opt,name=chunkSize,proto3" json:"chunkSize,omitempty"`
	ChunkKeys []string `protobuf:"bytes,5,rep,name=chunkKeys,proto3" json:"chunkKeys,omitempty"`
}

func (x *Policy) Reset() {
	*x = Policy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbus_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Policy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Policy) ProtoMessage() {}

func (x *Policy) ProtoReflect() protoreflect.Message {
	mi := &file_dbus_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Policy.ProtoReflect.Descriptor instead.
func (*Policy) Descriptor() ([]byte, []int) {
	return file_dbus_proto_rawDescGZIP(), []int{7}
}

func (x *Policy) GetChunkSize() int32 {
	if x != nil {
		return x.ChunkSize
	}
	return 0
}

func (x *Policy) GetChunkKeys() []string {
	if x != nil {
		return x.ChunkKeys
	}
	return nil
}

type RedisAuth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host     string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port     int32  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	Username string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *RedisAuth) Reset() {
	*x = RedisAuth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbus_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedisAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedisAuth) ProtoMessage() {}

func (x *RedisAuth) ProtoReflect() protoreflect.Message {
	mi := &file_dbus_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedisAuth.ProtoReflect.Descriptor instead.
func (*RedisAuth) Descriptor() ([]byte, []int) {
	return file_dbus_proto_rawDescGZIP(), []int{8}
}

func (x *RedisAuth) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *RedisAuth) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *RedisAuth) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *RedisAuth) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type JobInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId        string               `protobuf:"bytes,1,opt,name=jobId,proto3" json:"jobId,omitempty"`
	Token        string               `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	CreateTime   *timestamp.Timestamp `protobuf:"bytes,3,opt,name=createTime,proto3" json:"createTime,omitempty"`
	TokenTimeout *timestamp.Timestamp `protobuf:"bytes,4,opt,name=tokenTimeout,proto3" json:"tokenTimeout,omitempty"`
	Redisauth    *RedisAuth           `protobuf:"bytes,5,opt,name=redisauth,proto3" json:"redisauth,omitempty"`
}

func (x *JobInfo) Reset() {
	*x = JobInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbus_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobInfo) ProtoMessage() {}

func (x *JobInfo) ProtoReflect() protoreflect.Message {
	mi := &file_dbus_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobInfo.ProtoReflect.Descriptor instead.
func (*JobInfo) Descriptor() ([]byte, []int) {
	return file_dbus_proto_rawDescGZIP(), []int{9}
}

func (x *JobInfo) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *JobInfo) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *JobInfo) GetCreateTime() *timestamp.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *JobInfo) GetTokenTimeout() *timestamp.Timestamp {
	if x != nil {
		return x.TokenTimeout
	}
	return nil
}

func (x *JobInfo) GetRedisauth() *RedisAuth {
	if x != nil {
		return x.Redisauth
	}
	return nil
}

type RegisterSuccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jinfo  *JobInfo `protobuf:"bytes,1,opt,name=jinfo,proto3" json:"jinfo,omitempty"`
	Policy *Policy  `protobuf:"bytes,2,opt,name=policy,proto3" json:"policy,omitempty"`
}

func (x *RegisterSuccess) Reset() {
	*x = RegisterSuccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbus_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterSuccess) ProtoMessage() {}

func (x *RegisterSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_dbus_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterSuccess.ProtoReflect.Descriptor instead.
func (*RegisterSuccess) Descriptor() ([]byte, []int) {
	return file_dbus_proto_rawDescGZIP(), []int{10}
}

func (x *RegisterSuccess) GetJinfo() *JobInfo {
	if x != nil {
		return x.Jinfo
	}
	return nil
}

func (x *RegisterSuccess) GetPolicy() *Policy {
	if x != nil {
		return x.Policy
	}
	return nil
}

type RegisterError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *RegisterError) Reset() {
	*x = RegisterError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbus_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterError) ProtoMessage() {}

func (x *RegisterError) ProtoReflect() protoreflect.Message {
	mi := &file_dbus_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterError.ProtoReflect.Descriptor instead.
func (*RegisterError) Descriptor() ([]byte, []int) {
	return file_dbus_proto_rawDescGZIP(), []int{11}
}

func (x *RegisterError) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// actively evict memory when DLT job deregister
type DeregisterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jinfo         *JobInfo `protobuf:"bytes,1,opt,name=jinfo,proto3" json:"jinfo,omitempty"`
	DeleteDataset bool     `protobuf:"varint,2,opt,name=deleteDataset,proto3" json:"deleteDataset,omitempty"`
}

func (x *DeregisterRequest) Reset() {
	*x = DeregisterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbus_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeregisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeregisterRequest) ProtoMessage() {}

func (x *DeregisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dbus_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeregisterRequest.ProtoReflect.Descriptor instead.
func (*DeregisterRequest) Descriptor() ([]byte, []int) {
	return file_dbus_proto_rawDescGZIP(), []int{12}
}

func (x *DeregisterRequest) GetJinfo() *JobInfo {
	if x != nil {
		return x.Jinfo
	}
	return nil
}

func (x *DeregisterRequest) GetDeleteDataset() bool {
	if x != nil {
		return x.DeleteDataset
	}
	return false
}

type DeregisterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response string `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *DeregisterResponse) Reset() {
	*x = DeregisterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbus_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeregisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeregisterResponse) ProtoMessage() {}

func (x *DeregisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dbus_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeregisterResponse.ProtoReflect.Descriptor instead.
func (*DeregisterResponse) Descriptor() ([]byte, []int) {
	return file_dbus_proto_rawDescGZIP(), []int{13}
}

func (x *DeregisterResponse) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

type CacheMissRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *CacheMissRequest) Reset() {
	*x = CacheMissRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbus_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CacheMissRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CacheMissRequest) ProtoMessage() {}

func (x *CacheMissRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dbus_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CacheMissRequest.ProtoReflect.Descriptor instead.
func (*CacheMissRequest) Descriptor() ([]byte, []int) {
	return file_dbus_proto_rawDescGZIP(), []int{14}
}

func (x *CacheMissRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type CacheMissResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response bool `protobuf:"varint,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *CacheMissResponse) Reset() {
	*x = CacheMissResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbus_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CacheMissResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CacheMissResponse) ProtoMessage() {}

func (x *CacheMissResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dbus_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CacheMissResponse.ProtoReflect.Descriptor instead.
func (*CacheMissResponse) Descriptor() ([]byte, []int) {
	return file_dbus_proto_rawDescGZIP(), []int{15}
}

func (x *CacheMissResponse) GetResponse() bool {
	if x != nil {
		return x.Response
	}
	return false
}

type HearbeatMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jinfo *JobInfo `protobuf:"bytes,1,opt,name=jinfo,proto3" json:"jinfo,omitempty"`
}

func (x *HearbeatMessage) Reset() {
	*x = HearbeatMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbus_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HearbeatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HearbeatMessage) ProtoMessage() {}

func (x *HearbeatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_dbus_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HearbeatMessage.ProtoReflect.Descriptor instead.
func (*HearbeatMessage) Descriptor() ([]byte, []int) {
	return file_dbus_proto_rawDescGZIP(), []int{16}
}

func (x *HearbeatMessage) GetJinfo() *JobInfo {
	if x != nil {
		return x.Jinfo
	}
	return nil
}

type LogItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time    *timestamp.Timestamp `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	JobId   string               `protobuf:"bytes,2,opt,name=jobId,proto3" json:"jobId,omitempty"`
	Level   LogLevel             `protobuf:"varint,3,opt,name=level,proto3,enum=dbus.LogLevel" json:"level,omitempty"`
	Epoch   int32                `protobuf:"varint,4,opt,name=epoch,proto3" json:"epoch,omitempty"`
	Details string               `protobuf:"bytes,5,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *LogItem) Reset() {
	*x = LogItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dbus_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogItem) ProtoMessage() {}

func (x *LogItem) ProtoReflect() protoreflect.Message {
	mi := &file_dbus_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogItem.ProtoReflect.Descriptor instead.
func (*LogItem) Descriptor() ([]byte, []int) {
	return file_dbus_proto_rawDescGZIP(), []int{17}
}

func (x *LogItem) GetTime() *timestamp.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *LogItem) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *LogItem) GetLevel() LogLevel {
	if x != nil {
		return x.Level
	}
	return LogLevel_INFO
}

func (x *LogItem) GetEpoch() int32 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *LogItem) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

var File_dbus_proto protoreflect.FileDescriptor

var file_dbus_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x64, 0x62, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x64, 0x62,
	0x75, 0x73, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x44, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x70, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x04, 0x63, 0x72, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x64, 0x62, 0x75, 0x73, 0x2e, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x04, 0x63, 0x72, 0x65, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x22, 0x49, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x02, 0x72,
	0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x64, 0x62, 0x75, 0x73, 0x2e, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x43, 0x52, 0x02, 0x72, 0x63, 0x12,
	0x12, 0x0a, 0x04, 0x72, 0x65, 0x73, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72,
	0x65, 0x73, 0x70, 0x22, 0x5a, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x50, 0x55, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x46, 0x72, 0x65, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x43, 0x50, 0x55, 0x4d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x46, 0x72, 0x65, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x47, 0x50, 0x55,
	0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x46, 0x72, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x47, 0x50, 0x55, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x46, 0x72, 0x65, 0x65, 0x22,
	0xb3, 0x01, 0x0a, 0x06, 0x53, 0x33, 0x41, 0x75, 0x74, 0x68, 0x12, 0x29, 0x0a, 0x11, 0x61, 0x77,
	0x73, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x77, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x4b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x15, 0x61, 0x77, 0x73, 0x5f, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x61, 0x77, 0x73, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0xb7, 0x02, 0x0a, 0x0f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x04, 0x63, 0x72, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x64, 0x62, 0x75, 0x73, 0x2e, 0x43,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x04, 0x63, 0x72, 0x65, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x12, 0x24, 0x0a, 0x06, 0x73, 0x33, 0x61,
	0x75, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x64, 0x62, 0x75, 0x73,
	0x2e, 0x53, 0x33, 0x41, 0x75, 0x74, 0x68, 0x52, 0x06, 0x73, 0x33, 0x61, 0x75, 0x74, 0x68, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x43, 0x61, 0x63, 0x68, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x75, 0x73, 0x65, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x66,
	0x6c, 0x75, 0x73, 0x68, 0x46, 0x72, 0x65, 0x71, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x66, 0x6c, 0x75, 0x73, 0x68, 0x46, 0x72, 0x65, 0x71, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x75, 0x72,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x4d, 0x65, 0x6d, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0f, 0x64, 0x75, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x6e,
	0x4d, 0x65, 0x6d, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x75, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x49, 0x6e, 0x44, 0x69, 0x73, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x64,
	0x75, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x44, 0x69, 0x73, 0x6b, 0x12,
	0x2e, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x64, 0x62, 0x75, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22,
	0x80, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x72, 0x65, 0x67, 0x73, 0x75, 0x63, 0x63, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64, 0x62, 0x75, 0x73, 0x2e, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x07,
	0x72, 0x65, 0x67, 0x73, 0x75, 0x63, 0x63, 0x12, 0x2d, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x65, 0x72,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x62, 0x75, 0x73, 0x2e, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x06,
	0x72, 0x65, 0x67, 0x65, 0x72, 0x72, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x44, 0x0a, 0x06, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x68, 0x75, 0x6e, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68,
	0x75, 0x6e, 0x6b, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x68, 0x75, 0x6e, 0x6b, 0x4b, 0x65, 0x79, 0x73, 0x22, 0x6b, 0x0a, 0x09, 0x52, 0x65, 0x64, 0x69,
	0x73, 0x41, 0x75, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0xe0, 0x01, 0x0a, 0x07, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x14, 0x0a, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x3a, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x0c, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x2d, 0x0a, 0x09, 0x72, 0x65, 0x64,
	0x69, 0x73, 0x61, 0x75, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x64,
	0x62, 0x75, 0x73, 0x2e, 0x52, 0x65, 0x64, 0x69, 0x73, 0x41, 0x75, 0x74, 0x68, 0x52, 0x09, 0x72,
	0x65, 0x64, 0x69, 0x73, 0x61, 0x75, 0x74, 0x68, 0x22, 0x5c, 0x0a, 0x0f, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x23, 0x0a, 0x05, 0x6a,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x62, 0x75,
	0x73, 0x2e, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x6a, 0x69, 0x6e, 0x66, 0x6f,
	0x12, 0x24, 0x0a, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x64, 0x62, 0x75, 0x73, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x06,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x22, 0x25, 0x0a, 0x0d, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x5e, 0x0a,
	0x11, 0x44, 0x65, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x23, 0x0a, 0x05, 0x6a, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x62, 0x75, 0x73, 0x2e, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x05, 0x6a, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x22, 0x30, 0x0a,
	0x12, 0x44, 0x65, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x24, 0x0a, 0x10, 0x43, 0x61, 0x63, 0x68, 0x65, 0x4d, 0x69, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x2f, 0x0a, 0x11, 0x43, 0x61, 0x63, 0x68, 0x65, 0x4d, 0x69,
	0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x36, 0x0a, 0x0f, 0x48, 0x65, 0x61, 0x72, 0x62, 0x65,
	0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x6a, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x62, 0x75, 0x73, 0x2e,
	0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x6a, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0xa5,
	0x01, 0x0a, 0x07, 0x4c, 0x6f, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6a, 0x6f,
	0x62, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64,
	0x12, 0x24, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0e, 0x2e, 0x64, 0x62, 0x75, 0x73, 0x2e, 0x4c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x18, 0x0a, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2a, 0x37, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x43, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53,
	0x53, 0x46, 0x55, 0x4c, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44,
	0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0x10, 0x02, 0x2a,
	0x2a, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x08, 0x0a, 0x04, 0x49,
	0x4e, 0x46, 0x4f, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x45, 0x42, 0x55, 0x47, 0x10, 0x01,
	0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x32, 0x44, 0x0a, 0x0a, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x12, 0x14, 0x2e, 0x64, 0x62, 0x75, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x64, 0x62, 0x75,
	0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x32, 0x8a, 0x01, 0x0a, 0x0c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x15,
	0x2e, 0x64, 0x62, 0x75, 0x73, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x64, 0x62, 0x75, 0x73, 0x2e, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a,
	0x0a, 0x64, 0x65, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x17, 0x2e, 0x64, 0x62,
	0x75, 0x73, 0x2e, 0x44, 0x65, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x64, 0x62, 0x75, 0x73, 0x2e, 0x44, 0x65, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x46,
	0x0a, 0x09, 0x43, 0x61, 0x63, 0x68, 0x65, 0x4d, 0x69, 0x73, 0x73, 0x12, 0x39, 0x0a, 0x04, 0x63,
	0x61, 0x6c, 0x6c, 0x12, 0x16, 0x2e, 0x64, 0x62, 0x75, 0x73, 0x2e, 0x43, 0x61, 0x63, 0x68, 0x65,
	0x4d, 0x69, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x64, 0x62,
	0x75, 0x73, 0x2e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x4d, 0x69, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x43, 0x0a, 0x09, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62,
	0x65, 0x61, 0x74, 0x12, 0x36, 0x0a, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x12, 0x15, 0x2e, 0x64, 0x62,
	0x75, 0x73, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x62, 0x65, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x1a, 0x15, 0x2e, 0x64, 0x62, 0x75, 0x73, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x62, 0x65,
	0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x32, 0x3b, 0x0a, 0x06, 0x4c,
	0x6f, 0x67, 0x67, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x12, 0x0d, 0x2e,
	0x64, 0x62, 0x75, 0x73, 0x2e, 0x4c, 0x6f, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x28, 0x01, 0x42, 0x04, 0x5a, 0x02, 0x2e, 0x2f, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dbus_proto_rawDescOnce sync.Once
	file_dbus_proto_rawDescData = file_dbus_proto_rawDesc
)

func file_dbus_proto_rawDescGZIP() []byte {
	file_dbus_proto_rawDescOnce.Do(func() {
		file_dbus_proto_rawDescData = protoimpl.X.CompressGZIP(file_dbus_proto_rawDescData)
	})
	return file_dbus_proto_rawDescData
}

var file_dbus_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_dbus_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_dbus_proto_goTypes = []interface{}{
	(ConnectionRC)(0),           // 0: dbus.ConnectionRC
	(LogLevel)(0),               // 1: dbus.LogLevel
	(*Credential)(nil),          // 2: dbus.Credential
	(*ConnectRequest)(nil),      // 3: dbus.ConnectRequest
	(*ConnectResponse)(nil),     // 4: dbus.ConnectResponse
	(*ResourceInfo)(nil),        // 5: dbus.ResourceInfo
	(*S3Auth)(nil),              // 6: dbus.S3Auth
	(*RegisterRequest)(nil),     // 7: dbus.RegisterRequest
	(*RegisterResponse)(nil),    // 8: dbus.RegisterResponse
	(*Policy)(nil),              // 9: dbus.Policy
	(*RedisAuth)(nil),           // 10: dbus.RedisAuth
	(*JobInfo)(nil),             // 11: dbus.JobInfo
	(*RegisterSuccess)(nil),     // 12: dbus.RegisterSuccess
	(*RegisterError)(nil),       // 13: dbus.RegisterError
	(*DeregisterRequest)(nil),   // 14: dbus.DeregisterRequest
	(*DeregisterResponse)(nil),  // 15: dbus.DeregisterResponse
	(*CacheMissRequest)(nil),    // 16: dbus.CacheMissRequest
	(*CacheMissResponse)(nil),   // 17: dbus.CacheMissResponse
	(*HearbeatMessage)(nil),     // 18: dbus.HearbeatMessage
	(*LogItem)(nil),             // 19: dbus.LogItem
	(*timestamp.Timestamp)(nil), // 20: google.protobuf.Timestamp
	(*empty.Empty)(nil),         // 21: google.protobuf.Empty
}
var file_dbus_proto_depIdxs = []int32{
	2,  // 0: dbus.ConnectRequest.cred:type_name -> dbus.Credential
	0,  // 1: dbus.ConnectResponse.rc:type_name -> dbus.ConnectionRC
	2,  // 2: dbus.RegisterRequest.cred:type_name -> dbus.Credential
	6,  // 3: dbus.RegisterRequest.s3auth:type_name -> dbus.S3Auth
	5,  // 4: dbus.RegisterRequest.resource:type_name -> dbus.ResourceInfo
	12, // 5: dbus.RegisterResponse.regsucc:type_name -> dbus.RegisterSuccess
	13, // 6: dbus.RegisterResponse.regerr:type_name -> dbus.RegisterError
	20, // 7: dbus.JobInfo.createTime:type_name -> google.protobuf.Timestamp
	20, // 8: dbus.JobInfo.tokenTimeout:type_name -> google.protobuf.Timestamp
	10, // 9: dbus.JobInfo.redisauth:type_name -> dbus.RedisAuth
	11, // 10: dbus.RegisterSuccess.jinfo:type_name -> dbus.JobInfo
	9,  // 11: dbus.RegisterSuccess.policy:type_name -> dbus.Policy
	11, // 12: dbus.DeregisterRequest.jinfo:type_name -> dbus.JobInfo
	11, // 13: dbus.HearbeatMessage.jinfo:type_name -> dbus.JobInfo
	20, // 14: dbus.LogItem.time:type_name -> google.protobuf.Timestamp
	1,  // 15: dbus.LogItem.level:type_name -> dbus.LogLevel
	3,  // 16: dbus.Connection.connect:input_type -> dbus.ConnectRequest
	7,  // 17: dbus.Registration.register:input_type -> dbus.RegisterRequest
	14, // 18: dbus.Registration.deregister:input_type -> dbus.DeregisterRequest
	16, // 19: dbus.CacheMiss.call:input_type -> dbus.CacheMissRequest
	18, // 20: dbus.Heartbeat.call:input_type -> dbus.HearbeatMessage
	19, // 21: dbus.Logger.call:input_type -> dbus.LogItem
	4,  // 22: dbus.Connection.connect:output_type -> dbus.ConnectResponse
	8,  // 23: dbus.Registration.register:output_type -> dbus.RegisterResponse
	15, // 24: dbus.Registration.deregister:output_type -> dbus.DeregisterResponse
	17, // 25: dbus.CacheMiss.call:output_type -> dbus.CacheMissResponse
	18, // 26: dbus.Heartbeat.call:output_type -> dbus.HearbeatMessage
	21, // 27: dbus.Logger.call:output_type -> google.protobuf.Empty
	22, // [22:28] is the sub-list for method output_type
	16, // [16:22] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_dbus_proto_init() }
func file_dbus_proto_init() {
	if File_dbus_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_dbus_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Credential); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbus_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbus_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbus_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbus_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S3Auth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbus_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbus_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbus_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Policy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbus_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedisAuth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbus_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbus_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterSuccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbus_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbus_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeregisterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbus_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeregisterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbus_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CacheMissRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbus_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CacheMissResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbus_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HearbeatMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dbus_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_dbus_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*RegisterResponse_Regsucc)(nil),
		(*RegisterResponse_Regerr)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dbus_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   5,
		},
		GoTypes:           file_dbus_proto_goTypes,
		DependencyIndexes: file_dbus_proto_depIdxs,
		EnumInfos:         file_dbus_proto_enumTypes,
		MessageInfos:      file_dbus_proto_msgTypes,
	}.Build()
	File_dbus_proto = out.File
	file_dbus_proto_rawDesc = nil
	file_dbus_proto_goTypes = nil
	file_dbus_proto_depIdxs = nil
}
