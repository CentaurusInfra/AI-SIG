#!/bin/bash

K8S_API_PORT=$1
ALLUXIO_BASE_PATH=$2

# Create new user to execute remote commands on Alluxio cluster

# Set password-less ssh across Alluxio nodes for new user

#WORKER_NODES=$(kubectl get nodes --selector='!node-role.kubernetes.io/control-plane' -o wide --no-headers | awk '{print $6}')
ALL_NODES=$(kubectl get nodes  -o wide --no-headers | awk '{print $6}')

# This is to avoid the "yes/no" prompt for command below
echo "StrictHostKeyChecking no" > ~/.ssh/config && sync

mkdir -p /root/.ssh && touch /root/.ssh/known_hosts && chmod 0644 /root/.ssh/known_hosts

for WORKER in ${ALL_NODES};
do
    echo -e " [`date \"+%F %H:%M:%S,%m\"`] | INFO\t|  Setting up known_hosts for alluxio-user on ${WORKER}..."
    echo -e " [`date \"+%F %H:%M:%S,%m\"`] | INFO\t|  Enabling ssh setup for Data Caching Worker ${WORKER}"
    ssh-keygen -R alluxio-user@${WORKER}
done

echo "y" | ssh-keygen -b 2048 -t rsa -q -f ${HOME}/.ssh/id_rsa2 -N ""

for WORKER in ${ALL_NODES};
do
    echo -e " [`date \"+%F %H:%M:%S,%m\"`] | INFO\t|  Adding ssh id to Data Caching Worker ${WORKER}"
    sshpass -p alluxio ssh-copy-id -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -f alluxio-user@${WORKER} 2>&1 > /dev/null
done

set +e # If a proxy was already running, its ok

echo -e " [`date \"+%F %H:%M:%S,%m\"`] | INFO\t|  Starting Kubernetes Proxy on port ${K8S_API_PORT}..."
kubectl proxy --port=${K8S_API_PORT} 2>&1 > /dev/null &

sleep 2 # Let proxy boot up

# If mkdir fails, its ok as well.
kubectl exec alluxio-master-0 -c alluxio-master -- alluxio fs mkdir ${ALLUXIO_BASE_PATH} 2>&1 > /dev/null

set -e

#sleep infinity

# Boot up the Operator
/crd-operator
