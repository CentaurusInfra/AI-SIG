#FROM nvidia/cuda:10.2-cudn8-devel-ubuntu18.04
FROM sclinux1:443/repo_rdma/cuda:10.2-cudnn8-dev-ubu18

ENV PATH="/root/anaconda3/bin:${PATH}"
ARG PATH="/root/anaconda3/bin:${PATH}"
ENV OS_VER ubuntu18.04
ENV PLATFORM x86_64
ENV MOFED_VER 4.9-5.1.0.0
ENV FTP_SRV="10.145.41.34"

# install linux tools
RUN apt update && apt-get install -y wget git libcap2 net-tools libnuma-dev libudev-dev libz-dev vim iputils-ping libtool flex autoconf

WORKDIR /opt

# Basic tools
RUN /bin/bash -c "echo ########### Installing Anaconda3 ####################"
#RUN wget https://repo.anaconda.com/archive/Anaconda3-2022.05-Linux-x86_64.sh \
RUN wget ftp://anonymous:a@$FTP_SRV/pub/Anaconda3-2022.05-Linux-x86_64.sh \
    && mkdir /root/.conda \
    && bash Anaconda3-2022.05-Linux-x86_64.sh -b \
    && rm -f Anaconda3-2022.05-Linux-x86_64.sh  \
    && conda init bash \
    && conda update -y -n base -c defaults conda

### enter base env for new env creation
SHELL ["conda", "run", "-n", "base", "/bin/bash", "-c"]

# dependency for ompi build
RUN conda install -y sphinx_rtd_theme \
    && conda install -y recommonmark 

#### debug ####
RUN /bin/bash -c "echo ############## Install python 3.8 ###############" 
RUN /bin/bash -c "set | grep conda "

### create & setup p38 env 
RUN conda create -n p38 -y python=3.8 
SHELL ["conda", "run", "-n", "p38", "/bin/bash", "-c"]
ENV PATH="/root/anaconda3/envs/p38/bin:${PATH}"
ARG PATH="/root/anaconda3/envs/p38/bin:${PATH}"

RUN /bin/bash -c "echo ############## Building OMPI from source ##############" 
RUN /bin/bash -c "set | grep conda "


## dependencies
RUN conda install -y sphinx_rtd_theme  \
    && conda install -y recommonmark 

### the tag keep updating, modify to get the latest v5 of ompi
RUN cd /opt \
    && git clone https://github.com/open-mpi/ompi.git \
    && cd ompi \
    && git checkout tags/v5.0.0rc8 -b b5.0.0rc8 \
    && git submodule update --init --recursive \
    && ./autogen.pl \
    && mkdir build \
    && cd build \ 
    && ../configure --prefix=$CONDA_PREFIX --with-cuda --enable-mpi-thread-multiple --enable-debug \
    && make -j32 all \
    && make install \
    && cd ../ && rm -rf build

RUN /bin/bash -c "echo ########## Building pytorch with OMPI from source ########" 
RUN /bin/bash -c "set | grep conda "

RUN conda install -y numpy 
RUN conda install -y ninja pyyaml mkl mkl-include setuptools cmake cffi 
RUN conda install -y typing_extensions future six requests dataclasses 
RUN conda install -c pytorch -y magma-cuda102 
RUN cd /opt \
    && git clone https://github.com/pytorch/pytorch.git \
    && cd pytorch && git checkout tags/v1.8.2 -b b1.8.2 \
    && export CMAKE_PREFIX_PATH=$CONDA_PREFIX \
    && git clean -xdf && python setup.py clean \
    && git submodule sync \
    && git submodule deinit -f . \
    && git submodule update --init --recursive \
    && python setup.py install \
    && cd /opt && rm -rf pytorch

## torchvision
RUN /bin/bash -c "echo ########## Building torchvision from source ########"

RUN cd /opt \
    && git clone https://github.com/pytorch/vision.git \
    && cd vision \
    && git checkout tags/v0.9.2 -b b0.9.2 \
    && python setup.py install \
    && cd /opt && rm -rf vision

